// START SNIPPET use-logger
logger.quiet('An info log message which is always logged.')
logger.error('An error log message.')
logger.warn('A warning log message.')
logger.lifecycle('A lifecycle info log message.')
logger.info('An info log message.')
logger.debug('A debug log message.')
logger.trace('A trace log message.')
// END SNIPPET use-logger

// START SNIPPET use-println
println 'A message which is logged at QUIET level'
// END SNIPPET use-println

// START SNIPPET capture-stdout
logging.captureStandardOutput LogLevel.INFO
println 'A message which is logged at INFO level'
// END SNIPPET capture-stdout

// START SNIPPET task-capture-stdout
task logInfo {
    logging.captureStandardOutput LogLevel.INFO
    doFirst {
        println 'A task message which is logged at INFO level'
    }
}
// END SNIPPET task-capture-stdout

// START SNIPPET use-slf4j
import org.slf4j.Logger
import org.slf4j.LoggerFactory

Logger slf4jLogger = LoggerFactory.getLogger('some-logger')
slf4jLogger.info('An info log message logged using SLF4j')
// END SNIPPET use-slf4j
