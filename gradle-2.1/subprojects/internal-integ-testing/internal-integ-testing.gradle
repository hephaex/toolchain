/*
 * Copyright 2011 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
dependencies {
    compile libraries.groovy
    compile project(":internalTesting")
    compile project(':cli')
    compile project(':launcher')
    compile project(':native')
    compile libraries.jetty
    compile module("org.littleshoot:littleproxy:0.4") {
        dependency libraries.slf4j_api
        dependency "org.jboss.netty:netty:3.2.4.Final"
    }
    compile libraries.sshd
    compile libraries.gson
}

useTestFixtures(sourceSet: 'main')
useTestFixtures(sourceSet: 'main', project: ':diagnostics')
useClassycle()

task prepareVersionsInfo(type: PrepareVersionsInfo) {
    destFile = new File(generatedResourcesDir, "all-released-versions.properties")
    versions = releasedVersions.allVersions
    mostRecent = releasedVersions.mostRecentFinalRelease
}

sourceSets.main.output.dir generatedResourcesDir, builtBy: prepareVersionsInfo

class PrepareVersionsInfo extends DefaultTask {
    @OutputFile File destFile
    @Input String mostRecent
    @Input List<String> versions

    @TaskAction void prepareVersions() {
        def properties = new Properties()
        properties.mostRecent = mostRecent
        properties.versions = versions.join(' ')
        destFile.withOutputStream {
            properties.store(it, "")
        }
    }
}

apply from: "$rootDir/gradle/ideaTestSourcesWorkaround.gradle"
