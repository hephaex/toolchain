apply plugin: "groovy"

import org.gradle.build.*

configurations {
    mvn3Input
}

dependencies {
    compile project(":core")
    compile project(":resourcesHttp")

    compile libraries.commons_lang
    compile libraries.commons_io
    compile libraries.ivy
    compile libraries.slf4j_api
    compile libraries.maven_ant_tasks
    compile libraries.jsch
    compile libraries.gson
    runtime libraries.xbean //maven3 classes dependency
    runtime "org.bouncycastle:bcprov-jdk15:1.46@jar"

    compile fileTree("$buildDir/libs/jarjar") {
        builtBy 'jarJarMaven3'
    }

    mvn3Input libraries.maven3

    testCompile libraries.groovy

    //this dependency is necessary to run IvySFtpResolverIntegrationTest on ibm jdk
    //integTestRuntime "org.bouncycastle:bcprov-jdk15:1.46@jar"

    testFixturesCompile project(":internalIntegTesting")
}

task jarJarMaven3(type: JarJar) {
    inputJars = configurations.mvn3Input
    outputDir = file("$buildDir/libs/jarjar")

    //unfortunately, all those need to be jarjarred.
    // Even if some library (like aether) is not included in maven-ant-tasks it has
    // META-INF/plexus/components.xml that to jarjarred components.
    rule('org.apache.maven.**', 'org.gradle.mvn3.org.apache.maven.@1')
    rule('org.codehaus.**', 'org.gradle.mvn3.org.codehaus.@1')
    rule('org.sonatype.**', 'org.gradle.mvn3.org.sonatype.@1')

    avoidConflictingPlexusComponents(it)
}

if(isWindows && javaVersion.java5){
    compileTestGroovy.options.fork (memoryMaximumSize: '512m')
}

classpathManifest.dependsOn jarJarMaven3 //see GRADLE-2521

//adding explicit task dependencies due to https://issues.gradle.org/browse/GRADLE-2481
def allJarJars = tasks.withType(JarJar)
ideaModule.dependsOn allJarJars
eclipseClasspath.dependsOn allJarJars
useTestFixtures()
useTestFixtures(project: ":messaging")

def avoidConflictingPlexusComponents(JarJar task) {
    //DefaultSecDispatcher component is configured in 2 different jars (META-INF/plexus/components.xml).
    //The implementation is the same but the 'hint' is different and this makes plexus fail to start.
    //I'm removing the components.xml file from the sec-dispatcher jar.
    //This file contains only single component so I think we can remove it.
    task.doLast {
        def plexusSec = "$outputDir/jarjar-plexus-sec-dispatcher-1.3.jar"
        def plexusSecNoComps = "$plexusSec-noComps"
        ant {
            zip(destfile: plexusSecNoComps, update: true) {
                zipfileset(src: plexusSec) {
                    exclude(name: 'META-INF/plexus/components.xml')
                }
            }
            move(file: plexusSecNoComps, tofile: plexusSec)
        }
    }
}